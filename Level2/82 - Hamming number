#include <bits/stdc++.h>

using namespace std;

#define ll              long long
#define FOR(i,a,b)      for (int i=(a), _b = (b); i <= (_b); ++i)
#define FORD(i,a,b)     for (int i=(a), _b = (b); i >= (_b); --i)
#define getBit(mask,i)  (((mask) >> (i)) & (1))
#define allOf(x)        begin(x), end(x)
#define el              cout << '\n'

//--Compare------------------------------------------------------------------------------------
template<class X, class Y> 
    inline bool maximize(X &x, const Y &y){return (x < y) ? x = y, 1 : 0;}

template<class X, class Y> 
    inline bool minimize(X &x, const Y &y){return (x > y) ? x = y, 1 : 0;}

//--Process------------------------------------------------------------------------------------
#define int long long

vector <int> v;

void init(void)
{
    function <int(int, int)> Pow = [&](int a, int b)
    {
        int res = 1;
        for (; b; a *= a, b >>= 1) if (b & 1) res *= a;
        return res;
    };

    v.emplace_back(1e18 + 9);
    FOR(a,0,60) FOR(b,0,38) FOR(c,0,26)
    {
        int x = Pow(2, a);
        int y = Pow(3, b);
        int z = Pow(5, c);
        if (__lg(x) + __lg(y) + __lg(z) <= 60) v.emplace_back(x * y * z);
    }

    sort(allOf(v));
}

signed main(void)
{
    cin.tie(nullptr)->sync_with_stdio(false);
    cin.exceptions(cin.failbit);
    
    init();
    int q; cin >> q;
    while (q--) 
    {
        int m; cin >> m;

        int pos = lower_bound(allOf(v), m) - begin(v);
        cout << (v[pos] == m ? pos + 1 : -1) << '\n';
    }


    cerr << (1.0 * clock() / CLOCKS_PER_SEC);
    return 0;
}
