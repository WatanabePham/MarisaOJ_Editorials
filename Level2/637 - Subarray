#include <bits/stdc++.h>

using namespace std;

#define ll          long long
#define FOR(i,a,b)  for (int i=a; i<=b; ++i)
#define FORD(i,a,b) for (int i=a; i>=b; --i)
#define endl        cout << '\n'

template<class X, class Y> 
    bool maximize(X &x, const Y &y){return (x < y) ? x = y, 1 : 0;}

template<class X, class Y> 
    bool minimize(X &x, const Y &y){return (x > y) ? x = y, 1 : 0;}

const int MAXN = 2e5 + 5;
int n;
ll pre[MAXN], S;
ll mx_pre[MAXN];

signed main(void)
{
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr); cout.tie(nullptr);

    cin >> n >> S;
    mx_pre[0] = -9e18;
    FOR(i,1,n) 
    {
        cin >> pre[i];
        pre[i] += pre[i-1];
        maximize(mx_pre[i], mx_pre[i-1]);
        maximize(mx_pre[i], pre[i]);
    }

    //FOR(i,1,n) cout << pre[i] << ' ';endl;
    //FOR(i,1,n) cout << mx_pre[i] << ' ';endl;

    int res = -1;
    FOR(r,1,n)
    {
        int l = lower_bound(mx_pre, mx_pre+n+1, pre[r] - S) - mx_pre;
        if (pre[r] - pre[l] <= S) maximize(res, r-l);
        if (pre[r] - pre[l-1] <= S) maximize(res, r-l+1);
        //cout << pre[r] - S << ' ' << l << ' ' << r << ' ' << r-l+1, endl;
    }
    cout << res;

    cerr << (1.0 * clock() / CLOCKS_PER_SEC) << "s\n";
    return 0;
}
